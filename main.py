
import logging
from aiogram import Bot, Dispatcher, types, executor
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
import pandas as pd

API_TOKEN = "8070778295:AAFfnC-o627YmsQ3KohF-aOPUExiXnsx5sM"
logging.basicConfig(level=logging.INFO)

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

# –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã
categories = pd.read_excel("data/–∫–∞—Ç–µ–≥–æ—Ä–∏–∏.xlsx")
examples = pd.read_excel("data/–ø—Ä–∏–º–µ—Ä—ã.xlsx")

# –ù–∞—á–∞–ª–æ
@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É –≤—ã–±—Ä–∞—Ç—å, —á–µ–º –∑–∞–Ω—è—Ç—å—Å—è.\n–ù–∞–ø–∏—à–∏ /idea, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å!")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ /idea
@dp.message_handler(commands=['idea'])
async def idea_start(message: types.Message):
    keyboard = InlineKeyboardMarkup(row_width=1)
    for i, row in categories.iterrows():
        button_text = row['category_name']
        callback_data = f"cat_{row['id']}"
        keyboard.add(InlineKeyboardButton(text=button_text, callback_data=callback_data))
    await message.answer("–í–æ—Ç —á—Ç–æ —Ç–µ–±–µ –º–æ–∂–µ—Ç –ø–æ–¥–æ–π—Ç–∏ üëá", reply_markup=keyboard)

# –í—ã–±–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
@dp.callback_query_handler(lambda c: c.data.startswith("cat_"))
async def show_examples(callback_query: types.CallbackQuery):
    cat_id = int(callback_query.data.split("_")[1])
    matched = examples[examples["parent_category_id"] == cat_id]
    if matched.empty:
        await bot.send_message(callback_query.from_user.id, "–û—Ç–ª–∏—á–Ω—ã–π —Å–ø–æ—Å–æ–± –ø—Ä–æ–≤–µ—Å—Ç–∏ –≤—Ä–µ–º—è üëç\n\nüîÅ –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –¥—Ä—É–≥–∏–º –≤–∞—Ä–∏–∞–Ω—Ç–∞–º")
    else:
        for _, row in matched.iterrows():
            text = f"üéØ {row['title']}"
            if pd.notna(row['address']):
                text += f"\nüìç {row['address']}"
            if pd.notna(row['link']):
                text += f"\nüîó {row['link']}"
            if pd.notna(row['extra_info']):
                text += f"\nüí¨ {row['extra_info']}"
            await bot.send_message(callback_query.from_user.id, text)
        await bot.send_message(callback_query.from_user.id, "üîÅ –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –¥—Ä—É–≥–∏–º –≤–∞—Ä–∏–∞–Ω—Ç–∞–º ‚Äî /idea")

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
